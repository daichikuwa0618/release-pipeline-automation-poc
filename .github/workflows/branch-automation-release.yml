name: Release Branch Automation

on:
  create:

permissions:
  contents: write
  pull-requests: write

jobs:
  handle-release-branch:
    name: Handle release/x.y.z branch creation
    runs-on: ubuntu-24.04
    if: startsWith(github.ref_name, 'release/') && github.ref_type == 'branch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version and find target branch
        id: find_target
        run: |
          RELEASE_BRANCH="${{ github.ref_name }}"
          RELEASE_VERSION=$(echo "$RELEASE_BRANCH" | sed 's/release\///')
          
          echo "Release branch: $RELEASE_BRANCH"
          echo "Release version: $RELEASE_VERSION"
          
          # Parse version (e.g., 1.1.0 -> 1, 1, 0)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$RELEASE_VERSION"
          
          # Calculate next minor version (e.g., 1.1.0 -> 1.2.0)
          NEXT_MINOR=$((MINOR + 1))
          TARGET_VERSION="${MAJOR}.${NEXT_MINOR}.${PATCH}"
          TARGET_BRANCH="develop-${TARGET_VERSION}"
          
          echo "Target branch: $TARGET_BRANCH"
          echo "target_branch=$TARGET_BRANCH" >> $GITHUB_OUTPUT
          echo "target_version=$TARGET_VERSION" >> $GITHUB_OUTPUT
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
      - name: Check if target branch exists
        id: check_branch
        run: |
          TARGET_BRANCH="${{ steps.find_target.outputs.target_branch }}"
          
          if git show-ref --verify --quiet "refs/remotes/origin/$TARGET_BRANCH"; then
            echo "Branch $TARGET_BRANCH exists"
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Branch $TARGET_BRANCH does not exist"
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Create PR to merge develop-x.y.z to develop
        if: steps.check_branch.outputs.branch_exists == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "auto-release-merge/${{ steps.find_target.outputs.target_branch }}-to-develop-$(date +%Y%m%d-%H%M%S)"
          base: develop
          head: ${{ steps.find_target.outputs.target_branch }}
          title: "feat: merge ${{ steps.find_target.outputs.target_branch }} to develop after v${{ steps.find_target.outputs.release_version }} release"
          body: |
            ## Overview
            
            Merging ${{ steps.find_target.outputs.target_branch }} to develop following the creation of release/v${{ steps.find_target.outputs.release_version }} branch.
            
            - Release preparation for v${{ steps.find_target.outputs.release_version }} has started
            - To transition parallel development of v${{ steps.find_target.outputs.target_version }} to the develop branch, we are merging ${{ steps.find_target.outputs.target_branch }} to develop
            - After this merge, development for ${{ steps.find_target.outputs.target_branch }} will end, and v${{ steps.find_target.outputs.target_version }} development will continue on the develop branch
            
            ## Verification Steps
            
            1. Review changes from ${{ steps.find_target.outputs.target_branch }}
            2. Confirm content to be merged into develop branch
            3. Run tests as needed to ensure no issues
            4. After merge, confirm that future v${{ steps.find_target.outputs.target_version }} development will be done on the develop branch
            
            ## Notes
            
            This PR was automatically generated by GitHub Actions.
            It was triggered by the creation of the release/v${{ steps.find_target.outputs.release_version }} branch to automate parallel development transitions.
            
            For details, please refer to [BRANCH.md](../blob/develop/docs/BRANCH.md#parallel-version-development-branch-strategy).
          draft: false

      - name: Report result
        run: |
          TARGET_BRANCH="${{ steps.find_target.outputs.target_branch }}"
          if [ "${{ steps.check_branch.outputs.branch_exists }}" = "true" ]; then
            echo "✅ Created PR to merge $TARGET_BRANCH to develop"
          else
            echo "ℹ️ Target branch $TARGET_BRANCH does not exist, no action taken"
          fi
